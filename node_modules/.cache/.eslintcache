[{"C:\\Users\\User\\Documents\\GitHub\\comp-426_personal\\HockeyProject\\hockey-app\\src\\index.js":"1","C:\\Users\\User\\Documents\\GitHub\\comp-426_personal\\HockeyProject\\hockey-app\\src\\App.js":"2","C:\\Users\\User\\Documents\\GitHub\\comp-426_personal\\HockeyProject\\hockey-app\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\GitHub\\comp-426_personal\\hockeyProject\\hockey-app\\src\\index.js":"4","C:\\Users\\User\\Documents\\GitHub\\comp-426_personal\\hockeyProject\\hockey-app\\src\\App.js":"5","C:\\Users\\User\\Documents\\GitHub\\comp-426_personal\\hockeyProject\\hockey-app\\src\\reportWebVitals.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":57418,"mtime":1631601389087,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":26921,"mtime":1631229687246,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ursu9s",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"15g5v2n",{"filePath":"25","messages":"26","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\User\\Documents\\GitHub\\comp-426_personal\\HockeyProject\\hockey-app\\src\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\comp-426_personal\\HockeyProject\\hockey-app\\src\\App.js",["29","30","31"],"import logo from './logo.svg';\nimport 'bulma/css/bulma.min.css';\nimport './App.css';\nimport headPic from './Stick.jpg';\nimport { useState, useEffect } from 'react';\nimport ReactImageAppear from 'react-image-appear';\n\nfunction App() {\n\n  const [submitType, updateType] = useState('Players');\n  const [color1, updateColor1] = useState('typeButton2');\n  const [color2, updateColor2] = useState('typeButton');\n\n\n  return (\n    <div>\n\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <h1>Hockey Comparison Tool<img className=\"headPic\" src={headPic} alt=\"headPic\" /></h1>\n          <br />\n          <br />\n          <h2>Compare: <button className={color1} onClick={() => { updateType('Players'); updateColor1('typeButton2'); updateColor2('typeButton'); }}><h2>Players</h2></button> <button className={color2} onClick={() => { updateType('Teams'); updateColor2('typeButton2'); updateColor1('typeButton'); }}><h2>Teams</h2></button></h2>\n          <button onClick={() => { updateType(\"Cards\"); }}>Submit</button>\n\n        </div>\n      </div>\n      <Forms type={submitType} />\n    </div>\n  );\n}\n\nfunction Forms(props) {\n\n\n\n  const [formCount, addCount] = useState(2);\n  const [prevFormCount, addPrevCount] = useState(2);\n  const [form1Option1, updateF3O1] = useState('option 2');\n  const [formType, updateType] = useState(props.type);\n  const [formObjs, updateObjs] = useState([{ prop1: '1', prop2: '2' }, { prop3: '3', prop4: '4' }])\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  const [playerCard1, updatePlayerCard1] = useState({});\n  const [playerCard2, updatePlayerCard2] = useState({});\n  const [playerCard3, updatePlayerCard3] = useState({});\n  const [playerCard4, updatePlayerCard4] = useState({});\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    1\n\n  const [season1, updateSeason1] = useState('');\n  const [teams1, updateTeams1] = useState([]);\n  const [selectedTeam1, updateSelectedTeam1] = useState(null);\n  const [players1, updatePlayers1] = useState([]);\n  const [selectedPlayer1, updateSelectedPlayer1] = useState(null);\n  const [player1Img, updatePlayer1Img] = useState(null);\n\n  if (season1.length === 0) {\n    updateSeason1('2020-2021');\n  }\n\n  //update teams1\n  useEffect(() => {\n    let fixedSeason = season1.replace(/-/g, \"\");\n    async function fetchData() {\n\n\n\n      await fetch(`https://statsapi.web.nhl.com/api/v1/teams?season=${fixedSeason}`, {\n        method: \"GET\",\n\n\n      })\n        .then(res => res.json())\n        .then(\n          (result) => {\n\n            updateTeams1(result.teams.sort(function (a, b) {\n              var nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase()\n              if (nameA < nameB) //sort string ascending\n                return -1\n              if (nameA > nameB)\n                return 1\n              return 0 //default return value (no sorting)\n            }));\n\n\n          },\n\n\n        )\n    }\n\n    fetchData();\n    return;\n  }, [season1]);\n\n\n\n  //update players1\n\n  useEffect(() => {\n\n\n    let teamSelected = teams1.find(function isTeam(team) {\n      return team.name === selectedTeam1;\n    })\n\n    if (teamSelected === undefined) {\n      teamSelected = { id: 24 };\n    }\n\n    let fixedSeason = season1.replace(/-/g, \"\");\n\n    async function fetchData() {\n\n\n\n      await fetch(`https://statsapi.web.nhl.com/api/v1/teams/${teamSelected.id}?expand=team.roster&season=${fixedSeason}`, {\n        method: \"GET\",\n\n\n      })\n        .then(res => res.json())\n        .then(\n          (result) => {\n\n            let sortedPlayers = result.teams[0].roster.roster.sort(function (a, b) {\n              var nameA = a.person.fullName.toLowerCase(), nameB = b.person.fullName.toLowerCase()\n              if (nameA < nameB) //sort string ascending\n                return -1\n              if (nameA > nameB)\n                return 1\n              return 0 //default return value (no sorting)\n            });\n\n            updatePlayers1(\n              sortedPlayers\n            );\n\n            updateSelectedPlayer1(sortedPlayers[0]);\n\n\n          },\n\n\n        )\n    }\n\n    fetchData();\n    return;\n  }, [selectedTeam1, season1, teams1]);\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    2\n\n  const [season2, updateSeason2] = useState('');\n  const [teams2, updateTeams2] = useState([]);\n  const [selectedTeam2, updateSelectedTeam2] = useState(null);\n  const [players2, updatePlayers2] = useState([]);\n  const [selectedPlayer2, updateSelectedPlayer2] = useState(null);\n\n  if (season2.length === 0) {\n    updateSeason2('2020-2021');\n  }\n\n  //update teams2\n  useEffect(() => {\n    let fixedSeason = season2.replace(/-/g, \"\");\n    async function fetchData() {\n\n\n\n      await fetch(`https://statsapi.web.nhl.com/api/v1/teams?season=${fixedSeason}`, {\n        method: \"GET\",\n\n\n      })\n        .then(res => res.json())\n        .then(\n          (result) => {\n\n            updateTeams2(result.teams.sort(function (a, b) {\n              var nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase()\n              if (nameA < nameB) //sort string ascending\n                return -1\n              if (nameA > nameB)\n                return 1\n              return 0 //default return value (no sorting)\n            }));\n\n\n          },\n\n\n        )\n    }\n\n    fetchData();\n    return;\n  }, [season2]);\n\n\n\n  //update players2\n\n  useEffect(() => {\n\n\n    let teamSelected = teams2.find(function isTeam(team) {\n      return team.name === selectedTeam2;\n    })\n\n    if (teamSelected === undefined) {\n      teamSelected = { id: 24 };\n    }\n\n    let fixedSeason = season2.replace(/-/g, \"\");\n\n    async function fetchData() {\n\n\n\n      await fetch(`https://statsapi.web.nhl.com/api/v1/teams/${teamSelected.id}?expand=team.roster&season=${fixedSeason}`, {\n        method: \"GET\",\n\n\n      })\n        .then(res => res.json())\n        .then(\n          (result) => {\n\n            let sortedPlayers = result.teams[0].roster.roster.sort(function (a, b) {\n              var nameA = a.person.fullName.toLowerCase(), nameB = b.person.fullName.toLowerCase()\n              if (nameA < nameB) //sort string ascending\n                return -1\n              if (nameA > nameB)\n                return 1\n              return 0 //default return value (no sorting)\n            });\n\n            updatePlayers2(\n              sortedPlayers\n            );\n\n            updateSelectedPlayer2(sortedPlayers[0]);\n\n\n          },\n\n\n        )\n    }\n\n    fetchData();\n    return;\n  }, [selectedTeam2, season2, teams2]);\n\n\n\n\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 3\n  const [season3, updateSeason3] = useState('');\n  const [teams3, updateTeams3] = useState([]);\n  const [selectedTeam3, updateSelectedTeam3] = useState(null);\n  const [players3, updatePlayers3] = useState([]);\n  const [selectedPlayer3, updateSelectedPlayer3] = useState(null);\n\n\n  if (season3.length === 0) {\n    updateSeason3('2020-2021');\n  }\n\n  //update teams3\n  useEffect(() => {\n    let fixedSeason = season3.replace(/-/g, \"\");\n    async function fetchData() {\n\n\n\n      await fetch(`https://statsapi.web.nhl.com/api/v1/teams?season=${fixedSeason}`, {\n        method: \"GET\",\n\n\n      })\n        .then(res => res.json())\n        .then(\n          (result) => {\n\n            updateTeams3(result.teams.sort(function (a, b) {\n              var nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase()\n              if (nameA < nameB) //sort string ascending\n                return -1\n              if (nameA > nameB)\n                return 1\n              return 0 //default return value (no sorting)\n            }));\n\n\n          },\n\n\n        )\n    }\n\n    fetchData();\n    return;\n  }, [season3]);\n\n\n\n  //update players3\n\n  useEffect(() => {\n\n\n    let teamSelected = teams3.find(function isTeam(team) {\n      return team.name === selectedTeam3;\n    })\n\n    if (teamSelected === undefined) {\n      teamSelected = { id: 24 };\n    }\n\n    let fixedSeason = season3.replace(/-/g, \"\");\n\n    async function fetchData() {\n\n\n\n      await fetch(`https://statsapi.web.nhl.com/api/v1/teams/${teamSelected.id}?expand=team.roster&season=${fixedSeason}`, {\n        method: \"GET\",\n\n\n      })\n        .then(res => res.json())\n        .then(\n          (result) => {\n\n            let sortedPlayers = result.teams[0].roster.roster.sort(function (a, b) {\n              var nameA = a.person.fullName.toLowerCase(), nameB = b.person.fullName.toLowerCase()\n              if (nameA < nameB) //sort string ascending\n                return -1\n              if (nameA > nameB)\n                return 1\n              return 0 //default return value (no sorting)\n            });\n\n            updatePlayers3(\n              sortedPlayers\n            );\n\n            updateSelectedPlayer3(sortedPlayers[0]);\n\n          },\n\n\n        )\n    }\n\n    fetchData();\n    return;\n  }, [selectedTeam3, season3, teams3]);\n\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 4\n\n  const [season4, updateSeason4] = useState('');\n  const [teams4, updateTeams4] = useState([]);\n  const [selectedTeam4, updateSelectedTeam4] = useState(null);\n  const [players4, updatePlayers4] = useState([]);\n  const [selectedPlayer4, updateSelectedPlayer4] = useState(null);\n\n  if (season4.length === 0) {\n    updateSeason4('2020-2021');\n  }\n\n  //update teams4\n  useEffect(() => {\n    let fixedSeason = season4.replace(/-/g, \"\");\n    async function fetchData() {\n\n\n\n      await fetch(`https://statsapi.web.nhl.com/api/v1/teams?season=${fixedSeason}`, {\n        method: \"GET\",\n\n\n      })\n        .then(res => res.json())\n        .then(\n          (result) => {\n\n            updateTeams4(result.teams.sort(function (a, b) {\n              var nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase()\n              if (nameA < nameB) //sort string ascending\n                return -1\n              if (nameA > nameB)\n                return 1\n              return 0 //default return value (no sorting)\n            }));\n\n\n          },\n\n\n        )\n    }\n\n    fetchData();\n    return;\n  }, [season4]);\n\n\n\n  //update players4\n\n  useEffect(() => {\n\n\n    let teamSelected = teams4.find(function isTeam(team) {\n      return team.name === selectedTeam4;\n    })\n\n    if (teamSelected === undefined) {\n      teamSelected = { id: 24 };\n    }\n\n    let fixedSeason = season4.replace(/-/g, \"\");\n\n    async function fetchData() {\n\n\n\n      await fetch(`https://statsapi.web.nhl.com/api/v1/teams/${teamSelected.id}?expand=team.roster&season=${fixedSeason}`, {\n        method: \"GET\",\n\n\n      })\n        .then(res => res.json())\n        .then(\n          (result) => {\n\n            let sortedPlayers = result.teams[0].roster.roster.sort(function (a, b) {\n              var nameA = a.person.fullName.toLowerCase(), nameB = b.person.fullName.toLowerCase()\n              if (nameA < nameB) //sort string ascending\n                return -1\n              if (nameA > nameB)\n                return 1\n              return 0 //default return value (no sorting)\n            });\n\n            updatePlayers4(\n              sortedPlayers\n            );\n\n            updateSelectedPlayer4(sortedPlayers[0]);\n\n\n          },\n\n\n        )\n    }\n\n    fetchData();\n    return;\n  }, [selectedTeam4, season4, teams4]);\n\n\n  if (formType !== props.type) {\n\n    updateType(props.type);\n\n    addPrevCount(formCount);\n\n    addCount(2);\n\n    let updatedObj = formObjs.map(item => {\n\n      if (item.prop1 === '1') {\n        return { ...item, prop1: '5' };\n      }\n\n      return item;\n    })\n\n    updateObjs(updatedObj);\n  }\n\n\n  /////////////////////////////////////////////////////////////////////////////// Return code\n\n  if (formType === 'Players') {\n\n\n\n    return (\n\n\n      <section>\n        <div className='container has-background-grey-light'>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <form>\n                <h2>Player 1</h2>\n                <br />\n                <label>Season: </label>\n                <select onChange={evt => updateSeason1(evt.target.value)} name=\"selectList\" id=\"selectList\">\n                  <option value=\"2020-2021\">2020-2021</option>\n                  <option value=\"2019-2020\">2019-2020</option>\n                  <option value=\"2018-2019\">2018-2019</option>\n                  <option value=\"2017-2018\">2017-2018</option>\n                  <option value=\"2016-2017\">2016-2017</option>\n                </select>\n\n                <br></br>\n                <br />\n\n                <label>Team: </label>\n                <select onChange={evt => updateSelectedTeam1(evt.target.value)} name=\"selectList\" id=\"selectList\">\n                  {teams1.map(team => (\n                    <option>{team.name}</option>\n                  ))}\n                </select>\n\n                <br></br>\n                <br />\n\n                <label>Player: </label>\n                <select value={selectedPlayer1 === null ? 'None' : selectedPlayer1.person.fullName} onChange={evt => updateSelectedPlayer1(players1.find((player) => { return player.person.fullName === evt.target.value }))} name=\"selectList\" id=\"selectList\">\n                  {players1.map(player => (\n                    <option>{player.person.fullName}</option>\n                  ))}\n                </select>\n\n              </form>\n\n            </div>\n            <div className=\"column\">\n              <form>\n                <h2>Player 2</h2>\n                <br />\n                <label>Season: </label>\n                <select onChange={evt => updateSeason2(evt.target.value)} name=\"selectList\" id=\"selectList\">\n                  <option value=\"2020-2021\">2020-2021</option>\n                  <option value=\"2019-2020\">2019-2020</option>\n                  <option value=\"2018-2019\">2018-2019</option>\n                  <option value=\"2017-2018\">2017-2018</option>\n                  <option value=\"2016-2017\">2016-2017</option>\n                </select>\n\n                <br></br>\n                <br />\n\n                <label>Team: </label>\n                <select onChange={evt => updateSelectedTeam2(evt.target.value)} name=\"selectList\" id=\"selectList\">\n                  {teams2.map(team => (\n                    <option>{team.name}</option>\n                  ))}\n                </select>\n\n                <br></br>\n                <br />\n\n                <label>Player: </label>\n                <select value={selectedPlayer2 === null ? 'None' : selectedPlayer2.person.fullName} onChange={evt => updateSelectedPlayer2(players2.find((player) => { return player.person.fullName === evt.target.value }))} name=\"selectList\" id=\"selectList\">\n                  {players2.map(player => (\n                    <option>{player.person.fullName}</option>\n                  ))}\n                </select>\n\n\n              </form>\n\n            </div>\n            <div className=\"column\">\n              <Player3 />\n            </div>\n            <div className=\"column\">\n              <Player4 />\n            </div>\n          </div>\n\n        </div>\n      </section>\n    )\n\n  } else if (formType === 'Teams') {\n\n\n    return (\n      <section>\n        <div className='container has-background-grey-light'>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <form>\n                <h2>Team 1</h2>\n                <br />\n                <label>Season: </label>\n                <select name=\"selectList\" id=\"selectList\">\n                  <option value=\"option 1\">Option 1</option>\n                  <option value=\"option 2\">Option 2</option>\n                </select>\n\n                <br></br>\n                <br />\n\n                <label>Team: </label>\n                <select name=\"selectList\" id=\"selectList\">\n                  <option value=\"option 1\">Option 1</option>\n                  <option value=\"option 2\">Option 2</option>\n                </select>\n\n                <br></br>\n                <br />\n\n              </form>\n\n            </div>\n            <div className=\"column\">\n              <form>\n                <h2>Team 2</h2>\n                <br />\n                <label>Season: </label>\n                <select name=\"selectList\" id=\"selectList\">\n                  <option value=\"option 1\">Option 1</option>\n                  <option value=\"option 2\">Option 2</option>\n                </select>\n\n                <br></br>\n                <br />\n\n                <label>Team: </label>\n                <select name=\"selectList\" id=\"selectList\">\n                  <option value=\"option 1\">Option 1</option>\n                  <option value=\"option 2\">Option 2</option>\n                </select>\n\n                <br></br>\n                <br />\n              </form>\n\n            </div>\n            <div className=\"column\">\n              <Player3 />\n            </div>\n            <div className=\"column\">\n              <Player4 />\n            </div>\n          </div>\n\n          <button className=\"submitButton\">Submit</button>\n        </div>\n      </section>\n\n    )\n\n\n  } else {\n\n    getPlayerCards(prevFormCount);\n\n\n    if (prevFormCount === 2) {\n\n      return (\n\n        /* <ReactImageAppear\n           src=\"https://nhl.bamcontent.com/images/headshots/current/168x168/8474600.jpg\"\n           loader=\"https://cache.dominos.com/nolo/ca/en/010048/assets/build/images/img/spinner.gif\"\n         />\n         */\n\n        <div className=\"playerCardDiv\">\n          <div className=\"columns is-variable is-0\">\n            <div className=\"column\">\n              <div id=\"card\">\n                <div id=\"card_head\">\n                  <div className=\"centerHead\">\n                    <h1 className=\"cardHead\">{selectedPlayer1.person.fullName}</h1>\n                    <ReactImageAppear className=\"playerFace\"\n                      src={`http://nhl.bamcontent.com/images/headshots/current/168x168/${selectedPlayer1.person.id}.jpg`}\n                      loader=\"https://cache.dominos.com/nolo/ca/en/010048/assets/build/images/img/spinner.gif\"\n                    />\n                    <h2>{selectedPlayer1.position.name}</h2>\n                  </div>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard1.gamesPlayed}</p>\n                  </span>\n                </div>\n                <div id=\"stat_div\">\n                  <span>\n                    <p>{playerCard1.points}</p>\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard1.goals}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.assists}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.plusMinus}</p>\n                  </span>\n                </div>\n\n\n                <div>\n                  <span>\n                    <p>{playerCard1.PPG}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.PIM}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.shots}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.shotPct}</p>\n                  </span>\n                </div>\n\n              </div>\n\n            </div>\n\n            <div className=\"column\">\n              <div id=\"card\">\n                <div id=\"card_head\">\n                  <div className=\"centerHead\">\n                    <h1 className=\"cardHead\">{selectedPlayer2.person.fullName}</h1>\n                    <ReactImageAppear className=\"playerFace\"\n                      src={`http://nhl.bamcontent.com/images/headshots/current/168x168/${selectedPlayer2.person.id}.jpg`}\n                      loader=\"https://cache.dominos.com/nolo/ca/en/010048/assets/build/images/img/spinner.gif\"\n                    />\n                    <h2>{selectedPlayer2.position.name}</h2>\n                  </div>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard2.gamesPlayed}</p>\n                  </span>\n                </div>\n                <div id=\"stat_div\">\n                  <span>\n                    <p>{playerCard2.points}</p>\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard2.goals}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.assists}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.plusMinus}</p>\n                  </span>\n                </div>\n\n\n                <div>\n                  <span>\n                    <p>{playerCard2.PPG}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.PIM}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.shots}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.shotPct}</p>\n                  </span>\n                </div>\n\n              </div>\n            </div>\n\n          </div>\n\n          <div id='sidebar'>\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Games Played</p>\n              </span>\n            </div>\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Points</p>\n              </span>\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Goals</p>\n              </span>\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Assists</p>\n              </span>\n            </div>\n\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Plus/Minus</p>\n              </span>\n\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>PPG</p>\n              </span>\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>PIM</p>\n              </span>\n\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Shots</p>\n              </span>\n            </div>\n            <div>\n              <span className=\"sidebarSpan right\">\n                <p>Shooting %</p>\n              </span>\n            </div>\n          </div>\n\n        </div>\n      )\n\n    } else if (prevFormCount === 3) {\n      return (\n\n        /* <ReactImageAppear\n           src=\"https://nhl.bamcontent.com/images/headshots/current/168x168/8474600.jpg\"\n           loader=\"https://cache.dominos.com/nolo/ca/en/010048/assets/build/images/img/spinner.gif\"\n         />\n         */\n\n        <div className=\"playerCardDiv\">\n          <div className=\"columns is-variable is-0\">\n            <div className=\"column\">\n              <div id=\"card\">\n                <div id=\"card_head\">\n                  <div className=\"centerHead\">\n                    <h1 className=\"cardHead\">{selectedPlayer1.person.fullName}</h1>\n                    <ReactImageAppear className=\"playerFace\"\n                      src={`http://nhl.bamcontent.com/images/headshots/current/168x168/${selectedPlayer1.person.id}.jpg`}\n                      loader=\"https://cache.dominos.com/nolo/ca/en/010048/assets/build/images/img/spinner.gif\"\n                    />\n                    <h2>{selectedPlayer1.position.name}</h2>\n                  </div>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard1.gamesPlayed}</p>\n                  </span>\n                </div>\n                <div id=\"stat_div\">\n                  <span>\n                    <p>{playerCard1.points}</p>\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard1.goals}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.assists}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.plusMinus}</p>\n                  </span>\n                </div>\n\n\n                <div>\n                  <span>\n                    <p>{playerCard1.PPG}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.PIM}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.shots}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.shotPct}</p>\n                  </span>\n                </div>\n\n              </div>\n\n            </div>\n\n            <div className=\"column\">\n              <div id=\"card\">\n                <div id=\"card_head\">\n                  <div className=\"centerHead\">\n                    <h1 className=\"cardHead\">{selectedPlayer2.person.fullName}</h1>\n                    <ReactImageAppear className=\"playerFace\"\n                      src={`http://nhl.bamcontent.com/images/headshots/current/168x168/${selectedPlayer2.person.id}.jpg`}\n                      loader=\"https://cache.dominos.com/nolo/ca/en/010048/assets/build/images/img/spinner.gif\"\n                    />\n                    <h2>{selectedPlayer2.position.name}</h2>\n                  </div>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard2.gamesPlayed}</p>\n                  </span>\n                </div>\n                <div id=\"stat_div\">\n                  <span>\n                    <p>{playerCard2.points}</p>\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard2.goals}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.assists}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.plusMinus}</p>\n                  </span>\n                </div>\n\n\n                <div>\n                  <span>\n                    <p>{playerCard2.PPG}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.PIM}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.shots}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.shotPct}</p>\n                  </span>\n                </div>\n\n              </div>\n            </div>\n\n            <div className=\"column\">\n              <div id=\"card\">\n                <div id=\"card_head\">\n                  <div className=\"centerHead\">\n                    <h1 className=\"cardHead\">{selectedPlayer3.person.fullName}</h1>\n                    <ReactImageAppear className=\"playerFace\"\n                      src={`http://nhl.bamcontent.com/images/headshots/current/168x168/${selectedPlayer3.person.id}.jpg`}\n                      loader=\"https://cache.dominos.com/nolo/ca/en/010048/assets/build/images/img/spinner.gif\"\n                    />\n                    <h2>{selectedPlayer3.position.name}</h2>\n                  </div>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard3.gamesPlayed}</p>\n                  </span>\n                </div>\n                <div id=\"stat_div\">\n                  <span>\n                    <p>{playerCard3.points}</p>\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard3.goals}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard3.assists}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard3.plusMinus}</p>\n                  </span>\n                </div>\n\n\n                <div>\n                  <span>\n                    <p>{playerCard3.PPG}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard3.PIM}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard3.shots}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard3.shotPct}</p>\n                  </span>\n                </div>\n\n              </div>\n            </div>\n\n          </div>\n\n\n\n          <div id='sidebar'>\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Games Played</p>\n              </span>\n            </div>\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Points</p>\n              </span>\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Goals</p>\n              </span>\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Assists</p>\n              </span>\n            </div>\n\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Plus/Minus</p>\n              </span>\n\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>PPG</p>\n              </span>\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>PIM</p>\n              </span>\n\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Shots</p>\n              </span>\n            </div>\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Shooting %</p>\n              </span>\n            </div>\n          </div>\n\n        </div>\n      )\n    } else {\n      return (\n\n        /* <ReactImageAppear\n           src=\"https://nhl.bamcontent.com/images/headshots/current/168x168/8474600.jpg\"\n           loader=\"https://cache.dominos.com/nolo/ca/en/010048/assets/build/images/img/spinner.gif\"\n         />\n         */\n\n        <div className=\"playerCardDiv\">\n          <div className=\"columns is-variable is-0\">\n            <div className=\"column\">\n              <div id=\"card\">\n                <div id=\"card_head\">\n                  <div className=\"centerHead\">\n                    <h1 className=\"cardHead\">{selectedPlayer1.person.fullName}</h1>\n                    <ReactImageAppear className=\"playerFace\"\n                      src={`http://nhl.bamcontent.com/images/headshots/current/168x168/${selectedPlayer1.person.id}.jpg`}\n                      loader=\"https://cache.dominos.com/nolo/ca/en/010048/assets/build/images/img/spinner.gif\"\n                    />\n                    <h2>{selectedPlayer1.position.name}</h2>\n                  </div>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard1.gamesPlayed}</p>\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard1.points}</p>\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard1.goals}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.assists}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.plusMinus}</p>\n                  </span>\n                </div>\n\n\n                <div>\n                  <span>\n                    <p>{playerCard1.PPG}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.PIM}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.shots}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard1.shotPct}</p>\n                  </span>\n                </div>\n\n              </div>\n\n            </div>\n\n            <div className=\"column\">\n              <div id=\"card\">\n                <div id=\"card_head\">\n                  <div className=\"centerHead\">\n                    <h1 className=\"cardHead\">{selectedPlayer2.person.fullName}</h1>\n                    <ReactImageAppear className=\"playerFace\"\n                      src={`http://nhl.bamcontent.com/images/headshots/current/168x168/${selectedPlayer2.person.id}.jpg`}\n                      loader=\"https://cache.dominos.com/nolo/ca/en/010048/assets/build/images/img/spinner.gif\"\n                    />\n                    <h2>{selectedPlayer2.position.name}</h2>\n                  </div>\n\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard2.gamesPlayed}</p>\n                  </span>\n                </div>\n                <div id=\"stat_div\">\n                  <span>\n                    <p>{playerCard2.points}</p>\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard2.goals}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.assists}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.plusMinus}</p>\n                  </span>\n                </div>\n\n\n                <div>\n                  <span>\n                    <p>{playerCard2.PPG}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.PIM}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.shots}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard2.shotPct}</p>\n                  </span>\n                </div>\n\n              </div>\n            </div>\n\n            <div className=\"column\">\n              <div id=\"card\">\n                <div id=\"card_head\">\n                  <div className=\"centerHead\">\n                    <h1 className=\"cardHead\">{selectedPlayer3.person.fullName}</h1>\n                    <ReactImageAppear className=\"playerFace\"\n                      src={`http://nhl.bamcontent.com/images/headshots/current/168x168/${selectedPlayer3.person.id}.jpg`}\n                      loader=\"https://cache.dominos.com/nolo/ca/en/010048/assets/build/images/img/spinner.gif\"\n                    />\n                    <h2>{selectedPlayer3.position.name}</h2>\n                  </div>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard3.gamesPlayed}</p>\n                  </span>\n                </div>\n                <div id=\"stat_div\">\n                  <span>\n                    <p>{playerCard3.points}</p>\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard3.goals}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard3.assists}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard3.plusMinus}</p>\n                  </span>\n                </div>\n\n\n                <div>\n                  <span>\n                    <p>{playerCard3.PPG}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard3.PIM}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard3.shots}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard3.shotPct}</p>\n                  </span>\n                </div>\n\n              </div>\n            </div>\n\n            <div className=\"column\">\n              <div id=\"card\">\n                <div id=\"card_head\">\n                  <div className=\"centerHead\">\n                    <h1 className=\"cardHead\">{selectedPlayer4.person.fullName}</h1>\n                    <ReactImageAppear className=\"playerFace\"\n                      src={`http://nhl.bamcontent.com/images/headshots/current/168x168/${selectedPlayer4.person.id}.jpg`}\n                      loader=\"https://cache.dominos.com/nolo/ca/en/010048/assets/build/images/img/spinner.gif\"\n                    />\n                    <h2>{selectedPlayer4.position.name}</h2>\n                  </div>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard4.gamesPlayed}</p>\n                  </span>\n                </div>\n                <div id=\"stat_div\">\n                  <span>\n                    <p>{playerCard4.points}</p>\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    <p>{playerCard4.goals}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard4.assists}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard4.plusMinus}</p>\n                  </span>\n                </div>\n\n\n                <div>\n                  <span>\n                    <p>{playerCard4.PPG}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard4.PIM}</p>\n                  </span>\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard4.shots}</p>\n                  </span>\n\n                </div>\n\n                <div>\n                  <span>\n                    <p>{playerCard4.shotPct}</p>\n                  </span>\n                </div>\n\n              </div>\n            </div>\n\n          </div>\n\n\n\n\n\n          <div id='sidebar'>\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Games Played</p>\n              </span>\n            </div>\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Points</p>\n              </span>\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Goals</p>\n              </span>\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Assists</p>\n              </span>\n            </div>\n\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Plus/Minus</p>\n              </span>\n\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>PPG</p>\n              </span>\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>PIM</p>\n              </span>\n\n            </div>\n\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Shots</p>\n              </span>\n            </div>\n            <div className=\"stat_div\">\n              <span className=\"sidebarSpan right\">\n                <p>Shooting %</p>\n              </span>\n            </div>\n          </div>\n\n        </div>\n      )\n    }\n\n\n\n  }\n\n  function Player3() {\n\n    if (formCount <= 2) {\n      return (\n        <p className=\"addClick\" onClick={() => {\n          addCount(formCount + 1)\n        }}>+</p>\n      )\n    } else {\n\n      if (props.type === \"Players\") {\n\n        return (<form>\n          <h2>Player 3</h2>\n          <br />\n          <label>Season: </label>\n          <select value={season3} onChange={evt => updateSeason3(evt.target.value)} name=\"selectList\" id=\"selectList\">\n            <option value=\"2020-2021\">2020-2021</option>\n            <option value=\"2019-2020\">2019-2020</option>\n            <option value=\"2018-2019\">2018-2019</option>\n            <option value=\"2017-2018\">2017-2018</option>\n            <option value=\"2016-2017\">2016-2017</option>\n          </select>\n\n          <br></br>\n          <br />\n\n          <label>Team: </label>\n          <select value={selectedTeam3} onChange={evt => updateSelectedTeam3(evt.target.value)} name=\"selectList\" id=\"selectList\">\n            {teams3.map(team => (\n              <option>{team.name}</option>\n            ))}\n          </select>\n\n          <br></br>\n          <br />\n\n          <label>Player: </label>\n          <select value={selectedPlayer3 === null ? 'None' : selectedPlayer3.person.fullName} onChange={evt => updateSelectedPlayer3(players3.find((player) => { return player.person.fullName === evt.target.value }))} name=\"selectList\" id=\"selectList\">\n            {players3.map(player => (\n              <option>{player.person.fullName}</option>\n            ))}\n          </select>\n\n        </form>)\n      } else {\n        return (<form>\n          <h2>Team 3</h2>\n          <br />\n          <label>Season: </label>\n          <select name=\"selectList\" id=\"selectList\" value={form1Option1} onChange={evt => updateF3O1(evt.target.value)}>\n            <option value=\"option 1\">Option 1</option>\n            <option value=\"option 2\">Option 2</option>\n          </select>\n\n          <br></br>\n          <br />\n\n          <label>Team: </label>\n          <select name=\"selectList\" id=\"selectList\">\n            <option value=\"option 1\">Option 1</option>\n            <option value=\"option 2\">Option 2</option>\n          </select>\n\n          <br></br>\n          <br />\n\n\n        </form>\n\n\n        )\n      }\n    }\n  }\n\n  function Player4() {\n\n    if (formCount <= 2) {\n      return null;\n\n    } else if (formCount === 3) {\n\n      return (<p className=\"addClick\" onClick={() => {\n        addCount(formCount + 1)\n      }}>+</p>\n      )\n\n    } else {\n\n      if (props.type === \"Players\") {\n\n        return (<form>\n          <h2>Player 4</h2>\n          <br />\n          <label>Season: </label>\n          <select value={season4} onChange={evt => updateSeason4(evt.target.value)} name=\"selectList\" id=\"selectList\">\n            <option value=\"2020-2021\">2020-2021</option>\n            <option value=\"2019-2020\">2019-2020</option>\n            <option value=\"2018-2019\">2018-2019</option>\n            <option value=\"2017-2018\">2017-2018</option>\n            <option value=\"2016-2017\">2016-2017</option>\n          </select>\n\n          <br></br>\n          <br />\n\n          <label>Team: </label>\n          <select value={selectedTeam4} onChange={evt => updateSelectedTeam4(evt.target.value)} name=\"selectList\" id=\"selectList\">\n            {teams4.map(team => (\n              <option>{team.name}</option>\n            ))}\n          </select>\n\n          <br></br>\n          <br />\n\n          <label>Player: </label>\n          <select value={selectedPlayer4 === null ? 'None' : selectedPlayer4.person.fullName} onChange={evt => updateSelectedPlayer4(players4.find((player) => { return player.person.fullName === evt.target.value }))} name=\"selectList\" id=\"selectList\">\n            {players4.map(player => (\n              <option>{player.person.fullName}</option>\n            ))}\n          </select>\n\n        </form>)\n      } else {\n        return (<form>\n          <h2>Team 4</h2>\n          <br />\n          <label>Season: </label>\n          <select name=\"selectList\" id=\"selectList\" value={form1Option1} onChange={evt => updateF3O1(evt.target.value)}>\n            <option value=\"option 1\">Option 1</option>\n            <option value=\"option 2\">Option 2</option>\n          </select>\n\n          <br></br>\n          <br />\n\n          <label>Team: </label>\n          <select name=\"selectList\" id=\"selectList\">\n            <option value=\"option 1\">Option 1</option>\n            <option value=\"option 2\">Option 2</option>\n          </select>\n\n          <br></br>\n          <br />\n\n\n        </form>\n\n\n        )\n      }\n\n    }\n\n  }\n\n  async function getPlayerCards(count) {\n\n  \n\n    if (count === 2) {\n\n      if (Object.keys(playerCard1).length === 0 || playerCard1.playerID !== selectedPlayer1.person.id) {\n        let fixedSeason1 = season1.replace(/-/g, \"\");\n        await fetch(`https://statsapi.web.nhl.com/api/v1/people/${selectedPlayer1.person.id}/stats?stats=statsSingleSeason&season=${fixedSeason1}`, {\n          method: \"GET\",\n\n\n        })\n          .then(res => res.json())\n          .then(\n            (result) => {\n\n\n\n\n\n\n              let playerCard1Stats = {\n                playerID: selectedPlayer1.person.id,\n                gamesPlayed: result.stats[0].splits[0].stat.games,\n                points: result.stats[0].splits[0].stat.points,\n                goals: result.stats[0].splits[0].stat.goals,\n                assists: result.stats[0].splits[0].stat.assists,\n                plusMinus: result.stats[0].splits[0].stat.plusMinus,\n                PPG: result.stats[0].splits[0].stat.powerPlayGoals,\n                PIM: result.stats[0].splits[0].stat.powerPlayGoals,\n                shots: result.stats[0].splits[0].stat.shots,\n                shotPct: result.stats[0].splits[0].stat.shotPct\n\n\n\n              }\n\n   \n\n\n              updatePlayerCard1(playerCard1Stats);\n\n\n\n          \n\n\n            },\n\n\n          )\n      }\n\n      ////////////////////////////////////////\n\n      if (Object.keys(playerCard2).length === 0 || playerCard2.playerID !== selectedPlayer2.person.id) {\n        let fixedSeason2 = season2.replace(/-/g, \"\");\n        await fetch(`https://statsapi.web.nhl.com/api/v1/people/${selectedPlayer2.person.id}/stats?stats=statsSingleSeason&season=${fixedSeason2}`, {\n          method: \"GET\",\n\n\n        })\n          .then(res => res.json())\n          .then(\n            (result) => {\n\n\n\n\n      \n\n              let playerCard2Stats = {\n                playerID: selectedPlayer2.person.id,\n                gamesPlayed: result.stats[0].splits[0].stat.games,\n                points: result.stats[0].splits[0].stat.points,\n                goals: result.stats[0].splits[0].stat.goals,\n                assists: result.stats[0].splits[0].stat.assists,\n                plusMinus: result.stats[0].splits[0].stat.plusMinus,\n                PPG: result.stats[0].splits[0].stat.powerPlayGoals,\n                PIM: result.stats[0].splits[0].stat.powerPlayGoals,\n                shots: result.stats[0].splits[0].stat.shots,\n                shotPct: result.stats[0].splits[0].stat.shotPct\n\n\n\n              }\n\n    \n\n\n              updatePlayerCard2(playerCard2Stats);\n\n\n\n\n\n            },\n\n\n          )\n\n      }\n\n    } else if (count === 3) {\n\n      if (Object.keys(playerCard1).length === 0 || playerCard1.playerID !== selectedPlayer1.person.id) {\n        let fixedSeason1 = season1.replace(/-/g, \"\");\n        await fetch(`https://statsapi.web.nhl.com/api/v1/people/${selectedPlayer1.person.id}/stats?stats=statsSingleSeason&season=${fixedSeason1}`, {\n          method: \"GET\",\n\n\n        })\n          .then(res => res.json())\n          .then(\n            (result) => {\n\n\n\n\n\n              let playerCard1Stats = {\n                playerID: selectedPlayer1.person.id,\n                gamesPlayed: result.stats[0].splits[0].stat.games,\n                points: result.stats[0].splits[0].stat.points,\n                goals: result.stats[0].splits[0].stat.goals,\n                assists: result.stats[0].splits[0].stat.assists,\n                plusMinus: result.stats[0].splits[0].stat.plusMinus,\n                PPG: result.stats[0].splits[0].stat.powerPlayGoals,\n                PIM: result.stats[0].splits[0].stat.powerPlayGoals,\n                shots: result.stats[0].splits[0].stat.shots,\n                shotPct: result.stats[0].splits[0].stat.shotPct\n\n\n\n              }\n\n\n\n              updatePlayerCard1(playerCard1Stats);\n\n\n\n            },\n\n\n          )\n      }\n\n      ////////////////////////////////////////\n\n      if (Object.keys(playerCard2).length === 0 || playerCard2.playerID !== selectedPlayer2.person.id) {\n        let fixedSeason2 = season2.replace(/-/g, \"\");\n        await fetch(`https://statsapi.web.nhl.com/api/v1/people/${selectedPlayer2.person.id}/stats?stats=statsSingleSeason&season=${fixedSeason2}`, {\n          method: \"GET\",\n\n\n        })\n          .then(res => res.json())\n          .then(\n            (result) => {\n\n\n\n\n\n              let playerCard2Stats = {\n                playerID: selectedPlayer2.person.id,\n                gamesPlayed: result.stats[0].splits[0].stat.games,\n                points: result.stats[0].splits[0].stat.points,\n                goals: result.stats[0].splits[0].stat.goals,\n                assists: result.stats[0].splits[0].stat.assists,\n                plusMinus: result.stats[0].splits[0].stat.plusMinus,\n                PPG: result.stats[0].splits[0].stat.powerPlayGoals,\n                PIM: result.stats[0].splits[0].stat.powerPlayGoals,\n                shots: result.stats[0].splits[0].stat.shots,\n                shotPct: result.stats[0].splits[0].stat.shotPct\n\n\n\n              }\n\n\n\n              updatePlayerCard2(playerCard2Stats);\n\n\n\n\n\n            },\n\n\n          )\n\n      }\n\n      //////////////////////////////////////////////////////////////////////////////\n\n      if (Object.keys(playerCard3).length === 0 || playerCard3.playerID !== selectedPlayer3.person.id) {\n        let fixedSeason3 = season3.replace(/-/g, \"\");\n        await fetch(`https://statsapi.web.nhl.com/api/v1/people/${selectedPlayer3.person.id}/stats?stats=statsSingleSeason&season=${fixedSeason3}`, {\n          method: \"GET\",\n\n\n        })\n          .then(res => res.json())\n          .then(\n            (result) => {\n\n\n\n\n\n              let playerCard3Stats = {\n                playerID: selectedPlayer3.person.id,\n                gamesPlayed: result.stats[0].splits[0].stat.games,\n                points: result.stats[0].splits[0].stat.points,\n                goals: result.stats[0].splits[0].stat.goals,\n                assists: result.stats[0].splits[0].stat.assists,\n                plusMinus: result.stats[0].splits[0].stat.plusMinus,\n                PPG: result.stats[0].splits[0].stat.powerPlayGoals,\n                PIM: result.stats[0].splits[0].stat.powerPlayGoals,\n                shots: result.stats[0].splits[0].stat.shots,\n                shotPct: result.stats[0].splits[0].stat.shotPct\n\n\n\n              }\n\n\n\n              updatePlayerCard3(playerCard3Stats);\n\n\n\n\n            },\n\n\n          )\n\n      }\n\n\n\n\n    } else {\n\n      if (Object.keys(playerCard1).length === 0 || playerCard1.playerID !== selectedPlayer1.person.id) {\n        let fixedSeason1 = season1.replace(/-/g, \"\");\n        await fetch(`https://statsapi.web.nhl.com/api/v1/people/${selectedPlayer1.person.id}/stats?stats=statsSingleSeason&season=${fixedSeason1}`, {\n          method: \"GET\",\n\n\n        })\n          .then(res => res.json())\n          .then(\n            (result) => {\n\n\n\n\n\n              let playerCard1Stats = {\n                playerID: selectedPlayer1.person.id,\n                gamesPlayed: result.stats[0].splits[0].stat.games,\n                points: result.stats[0].splits[0].stat.points,\n                goals: result.stats[0].splits[0].stat.goals,\n                assists: result.stats[0].splits[0].stat.assists,\n                plusMinus: result.stats[0].splits[0].stat.plusMinus,\n                PPG: result.stats[0].splits[0].stat.powerPlayGoals,\n                PIM: result.stats[0].splits[0].stat.powerPlayGoals,\n                shots: result.stats[0].splits[0].stat.shots,\n                shotPct: result.stats[0].splits[0].stat.shotPct\n\n\n\n              }\n\n\n\n              updatePlayerCard1(playerCard1Stats);\n\n\n\n\n            },\n\n\n          )\n      }\n\n      ////////////////////////////////////////\n\n      if (Object.keys(playerCard2).length === 0 || playerCard2.playerID !== selectedPlayer2.person.id) {\n        let fixedSeason2 = season2.replace(/-/g, \"\");\n        await fetch(`https://statsapi.web.nhl.com/api/v1/people/${selectedPlayer2.person.id}/stats?stats=statsSingleSeason&season=${fixedSeason2}`, {\n          method: \"GET\",\n\n\n        })\n          .then(res => res.json())\n          .then(\n            (result) => {\n\n\n\n\n\n\n              let playerCard2Stats = {\n                playerID: selectedPlayer2.person.id,\n                gamesPlayed: result.stats[0].splits[0].stat.games,\n                points: result.stats[0].splits[0].stat.points,\n                goals: result.stats[0].splits[0].stat.goals,\n                assists: result.stats[0].splits[0].stat.assists,\n                plusMinus: result.stats[0].splits[0].stat.plusMinus,\n                PPG: result.stats[0].splits[0].stat.powerPlayGoals,\n                PIM: result.stats[0].splits[0].stat.powerPlayGoals,\n                shots: result.stats[0].splits[0].stat.shots,\n                shotPct: result.stats[0].splits[0].stat.shotPct\n\n\n\n              }\n\n\n              updatePlayerCard2(playerCard2Stats);\n\n\n\n\n\n            },\n\n\n          )\n\n      }\n\n      //////////////////////////////////////////////////////////////////////////////\n\n      if (Object.keys(playerCard3).length === 0 || playerCard3.playerID !== selectedPlayer3.person.id) {\n        let fixedSeason3 = season3.replace(/-/g, \"\");\n        await fetch(`https://statsapi.web.nhl.com/api/v1/people/${selectedPlayer3.person.id}/stats?stats=statsSingleSeason&season=${fixedSeason3}`, {\n          method: \"GET\",\n\n\n        })\n          .then(res => res.json())\n          .then(\n            (result) => {\n\n\n\n\n              let playerCard3Stats = {\n                playerID: selectedPlayer3.person.id,\n                gamesPlayed: result.stats[0].splits[0].stat.games,\n                points: result.stats[0].splits[0].stat.points,\n                goals: result.stats[0].splits[0].stat.goals,\n                assists: result.stats[0].splits[0].stat.assists,\n                plusMinus: result.stats[0].splits[0].stat.plusMinus,\n                PPG: result.stats[0].splits[0].stat.powerPlayGoals,\n                PIM: result.stats[0].splits[0].stat.powerPlayGoals,\n                shots: result.stats[0].splits[0].stat.shots,\n                shotPct: result.stats[0].splits[0].stat.shotPct\n\n\n\n              }\n\n\n              updatePlayerCard3(playerCard3Stats);\n\n\n\n\n            },\n\n\n          )\n\n      }\n\n      //////////////////////////////////////////////////////////////////////////////\n\n      if (Object.keys(playerCard4).length === 0 || playerCard4.playerID !== selectedPlayer4.person.id) {\n        let fixedSeason4 = season4.replace(/-/g, \"\");\n        await fetch(`https://statsapi.web.nhl.com/api/v1/people/${selectedPlayer4.person.id}/stats?stats=statsSingleSeason&season=${fixedSeason4}`, {\n          method: \"GET\",\n\n\n        })\n          .then(res => res.json())\n          .then(\n            (result) => {\n\n\n\n\n              let playerCard4Stats = {\n                playerID: selectedPlayer4.person.id,\n                gamesPlayed: result.stats[0].splits[0].stat.games,\n                points: result.stats[0].splits[0].stat.points,\n                goals: result.stats[0].splits[0].stat.goals,\n                assists: result.stats[0].splits[0].stat.assists,\n                plusMinus: result.stats[0].splits[0].stat.plusMinus,\n                PPG: result.stats[0].splits[0].stat.powerPlayGoals,\n                PIM: result.stats[0].splits[0].stat.powerPlayGoals,\n                shots: result.stats[0].splits[0].stat.shots,\n                shotPct: result.stats[0].splits[0].stat.shotPct\n\n\n\n              }\n\n\n\n              updatePlayerCard4(playerCard4Stats);\n\n\n\n\n\n            },\n\n\n          )\n\n      }\n\n    }\n\n\n\n\n\n  }\n\n\n}\n\nexport default App;\n","C:\\Users\\User\\Documents\\GitHub\\comp-426_personal\\HockeyProject\\hockey-app\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\GitHub\\comp-426_personal\\hockeyProject\\hockey-app\\src\\index.js",[],["32","33"],"C:\\Users\\User\\Documents\\GitHub\\comp-426_personal\\hockeyProject\\hockey-app\\src\\App.js",["34","35","36","37","38","39","40","41","42"],"C:\\Users\\User\\Documents\\GitHub\\comp-426_personal\\hockeyProject\\hockey-app\\src\\reportWebVitals.js",[],{"ruleId":"43","severity":1,"message":"44","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":12},{"ruleId":"43","severity":1,"message":"47","line":61,"column":10,"nodeType":"45","messageId":"46","endLine":61,"endColumn":20},{"ruleId":"43","severity":1,"message":"48","line":61,"column":22,"nodeType":"45","messageId":"46","endLine":61,"endColumn":38},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":12},{"ruleId":"43","severity":1,"message":"53","line":47,"column":10,"nodeType":"45","messageId":"46","endLine":47,"endColumn":21},{"ruleId":"43","severity":1,"message":"54","line":47,"column":23,"nodeType":"45","messageId":"46","endLine":47,"endColumn":40},{"ruleId":"43","severity":1,"message":"55","line":48,"column":10,"nodeType":"45","messageId":"46","endLine":48,"endColumn":21},{"ruleId":"43","severity":1,"message":"56","line":48,"column":23,"nodeType":"45","messageId":"46","endLine":48,"endColumn":40},{"ruleId":"43","severity":1,"message":"57","line":49,"column":10,"nodeType":"45","messageId":"46","endLine":49,"endColumn":21},{"ruleId":"43","severity":1,"message":"58","line":49,"column":23,"nodeType":"45","messageId":"46","endLine":49,"endColumn":40},{"ruleId":"43","severity":1,"message":"47","line":59,"column":10,"nodeType":"45","messageId":"46","endLine":59,"endColumn":20},{"ruleId":"43","severity":1,"message":"48","line":59,"column":22,"nodeType":"45","messageId":"46","endLine":59,"endColumn":38},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'player1Img' is assigned a value but never used.","'updatePlayer1Img' is assigned a value but never used.","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"'playerCard2' is assigned a value but never used.","'updatePlayerCard2' is assigned a value but never used.","'playerCard3' is assigned a value but never used.","'updatePlayerCard3' is assigned a value but never used.","'playerCard4' is assigned a value but never used.","'updatePlayerCard4' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]